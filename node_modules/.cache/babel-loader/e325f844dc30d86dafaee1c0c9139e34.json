{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantiny: 0\n  },\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.item.push();\n      }\n    },\n    removeItem() {}\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantiny","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","removeItem","cartActions","actions"],"sources":["C:/react-projects/Redux/Redux practice/01-starting-project/src/components/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantiny: 0,\r\n    },\r\n    reducers: {\r\n        addItem(state, action){\r\n            const newItem = action.payload\r\n            const existingItem = state.items.find(item => item.id === newItem.id)\r\n            if (!existingItem) {\r\n                state.item.push()\r\n            } \r\n        },\r\n        removeItem(){}\r\n    }\r\n})\r\n\r\nexport const cartActions = cartSlice.actions\r\n\r\nexport default cartSlice"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACnB,CAAC;EACDC,QAAQ,EAAE;IACNC,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAC;MAClB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACrE,IAAI,CAACH,YAAY,EAAE;QACfJ,KAAK,CAACM,IAAI,CAACE,IAAI,EAAE;MACrB;IACJ,CAAC;IACDC,UAAU,GAAE,CAAC;EACjB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGjB,SAAS,CAACkB,OAAO;AAE5C,eAAelB,SAAS"},"metadata":{},"sourceType":"module"}